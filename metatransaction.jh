entity MetaTransaction {
    status MetaTansactonsStatus
    profile String,
    owner String required,
    name String,
}

entity Document {
	content Blob required,
    fileName String required,
    title String,
}

entity SignatureField {
	page Integer required,
    x Integer required,
    y Integer required,
    image Blob,
    signerId Long required,
}

entity Signer {
	status SignerStatus
	firstname String required,
    lastname String required,
    organization String,
    emailAddress String required,
    phoneNum String,
    birthDate LocalDate,
    successURL String,
    cancelURL String,
    failURL String,
    certificateType CertificateType
}

entity Transaction {
    status TansactonsStatus,
    idUniversign String required,
}

enum CertificateType {
 Simple, Certified, Advanced
}

enum TansactonsStatus {
 None, Ready, Expired, Canceled, Failed, Completed
}

enum MetaTansactonsStatus {
 NONE, CREATE, LAUNCH, CANCELED, FINISH
}

enum SignerStatus {
 NONE, CREATE, LAUNCH, FAILED, CANCELED, FINISH
}

relationship OneToMany {
  MetaTransaction{documents} to Document{metaTransaction}
}

relationship OneToMany {
  MetaTransaction{signers} to Signer{metaTransaction}
}

relationship OneToMany {
  Document{documents} to SignatureField{metaTransaction}
}

relationship OneToOne {
  Signer{transaction} to Transaction{signer}
}

paginate MetaTransaction with pagination

service all with serviceImpl

angularSuffix * with parallel